{
    "openapi": "3.0.0",
    "info": {
        "title": "PPI Api",
        "version": "0.1"
    },
    "paths": {
        "/api/account/patch/": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Edit Account",
                "description": "Edit Account",
                "operationId": "patchAccount",
                "requestBody": {
                    "description": "Account to store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "title": "name",
                                        "description": "first name of User",
                                        "type": "string",
                                        "example": "Jozef"
                                    },
                                    "last_name": {
                                        "title": "name",
                                        "description": "first name of User",
                                        "type": "string",
                                        "example": "Bugal"
                                    },
                                    "email": {
                                        "title": "email",
                                        "description": "email of User",
                                        "type": "string"
                                    },
                                    "address": {
                                        "title": "address",
                                        "description": "address of User",
                                        "type": "string"
                                    },
                                    "date_of_birth": {
                                        "title": "date_of_birth",
                                        "description": "Users date of Birth",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "phone": {
                                        "title": "phone",
                                        "description": "Users Phone number",
                                        "type": "string"
                                    },
                                    "phone_code": {
                                        "title": "phone_code",
                                        "description": "Users Phone Code",
                                        "type": "string"
                                    },
                                    "nationality": {
                                        "title": "nationality",
                                        "description": "Users Nationality",
                                        "type": "string"
                                    },
                                    "details": {
                                        "title": "details",
                                        "description": "User Details",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User patched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/account/update-password/": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Update Password",
                "description": "Update Password",
                "operationId": "patchPassword",
                "requestBody": {
                    "description": "Password to store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "password": {
                                        "title": "password",
                                        "description": "password of User",
                                        "type": "password",
                                        "example": "pass12Erasd"
                                    },
                                    "password_confirmation": {
                                        "title": "password_confirmation",
                                        "description": "password confirmation of User",
                                        "type": "password",
                                        "example": "pass12Erasd"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Password patched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Login User",
                "description": "Login User",
                "operationId": "loginUser",
                "requestBody": {
                    "description": "User to login",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "title": "email",
                                        "description": "email of User",
                                        "type": "string"
                                    },
                                    "password": {
                                        "title": "password",
                                        "description": "password of User",
                                        "type": "password",
                                        "example": "pass12Erasd"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Register new User",
                "description": "Register new User",
                "operationId": "registerUser",
                "requestBody": {
                    "description": "User to register",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "title": "id",
                                        "description": "id of User",
                                        "type": "integer",
                                        "readOnly": "true",
                                        "example": "1"
                                    },
                                    "first_name": {
                                        "title": "name",
                                        "description": "first name of User",
                                        "type": "string",
                                        "example": "Jozef"
                                    },
                                    "last_name": {
                                        "title": "name",
                                        "description": "first name of User",
                                        "type": "string",
                                        "example": "Bugal"
                                    },
                                    "email": {
                                        "title": "email",
                                        "description": "email of User",
                                        "type": "string"
                                    },
                                    "password": {
                                        "title": "password",
                                        "description": "password of User",
                                        "type": "password",
                                        "example": "pass12Erasd"
                                    },
                                    "password_confirmation": {
                                        "title": "password_confirmation",
                                        "description": "password confirmation of User",
                                        "type": "password",
                                        "example": "pass12Erasd"
                                    },
                                    "address": {
                                        "title": "address",
                                        "description": "address of User",
                                        "type": "string"
                                    },
                                    "date_of_birth": {
                                        "title": "date_of_birth",
                                        "description": "Users date of Birth",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "phone": {
                                        "title": "phone",
                                        "description": "Users Phone number",
                                        "type": "string"
                                    },
                                    "phone_code": {
                                        "title": "phone_code",
                                        "description": "Users Phone Code",
                                        "type": "string"
                                    },
                                    "nationality": {
                                        "title": "nationality",
                                        "description": "Users Nationality",
                                        "type": "string"
                                    },
                                    "details": {
                                        "title": "details",
                                        "description": "User Details",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/exam/store": {
            "post": {
                "tags": [
                    "Exams"
                ],
                "summary": "Create new Exam",
                "description": "Create new Exam",
                "operationId": "createExam",
                "requestBody": {
                    "description": "Exam to store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "exam": {
                                        "$ref": "#/components/schemas/Exam"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Exam stored",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Exam"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/exam/get": {
            "get": {
                "tags": [
                    "Exams"
                ],
                "summary": "Get all Exams",
                "description": "Get all Exams",
                "operationId": "getExams",
                "requestBody": {},
                "responses": {
                    "200": {
                        "description": "Get Exams",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Exam"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/exam/get-by-name/{name}": {
            "get": {
                "tags": [
                    "Exams"
                ],
                "summary": "Get all Exams by name",
                "description": "Get all Exams by name",
                "operationId": "getExamsByName",
                "parameters": [
                    {
                        "parameter": "name",
                        "name": "name",
                        "in": "path",
                        "description": "The name to patch",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {},
                "responses": {
                    "200": {
                        "description": "Get Exams by name",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Exam"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/exam/patch/{id}": {
            "patch": {
                "tags": [
                    "Exams"
                ],
                "summary": "Update Exam",
                "description": "Update Exam",
                "operationId": "patchExam",
                "parameters": [
                    {
                        "parameter": "id",
                        "name": "id",
                        "in": "path",
                        "description": "The ID to patch",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Exam to store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "exam": {
                                        "$ref": "#/components/schemas/Exam"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Translation patched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Translation"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/language/store": {
            "post": {
                "tags": [
                    "Languages"
                ],
                "summary": "Create new Language",
                "description": "Create new Language",
                "operationId": "createLanguage",
                "requestBody": {
                    "description": "Language to store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "title": "id",
                                        "description": "id of Language",
                                        "type": "integer",
                                        "readOnly": "true",
                                        "example": "1"
                                    },
                                    "name": {
                                        "title": "name",
                                        "description": "name of Language",
                                        "type": "string",
                                        "example": "Czech"
                                    },
                                    "abbreviation": {
                                        "title": "abbreviation",
                                        "description": "abbreviation of Language",
                                        "type": "string",
                                        "example": "CZ"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Language stored",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Language"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/language/get": {
            "get": {
                "tags": [
                    "Languages"
                ],
                "summary": "Get all Languages",
                "description": "Get all Languages",
                "operationId": "getLanguages",
                "requestBody": {},
                "responses": {
                    "200": {
                        "description": "Get Languages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Language"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/render/store": {
            "post": {
                "tags": [
                    "Renders"
                ],
                "summary": "Create new Render",
                "description": "Create new Render",
                "operationId": "createRender",
                "requestBody": {
                    "description": "Render to store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "title": "id",
                                        "description": "id of Render",
                                        "type": "integer",
                                        "readOnly": "true",
                                        "example": "1"
                                    },
                                    "render": {
                                        "title": "render",
                                        "description": "render Text",
                                        "type": "string",
                                        "example": "Bohužel, stránka se nepodařila načíst."
                                    },
                                    "language_id": {
                                        "title": "language_id",
                                        "description": "id of Language",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "translation_id": {
                                        "title": "translation_id",
                                        "description": "id of Translation",
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Render stored",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Render"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/render/get": {
            "get": {
                "tags": [
                    "Renders"
                ],
                "summary": "Get all Renders",
                "description": "Get all Renders",
                "operationId": "getRenders",
                "requestBody": {},
                "responses": {
                    "200": {
                        "description": "Get Renders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Render"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/render/patch/{id}": {
            "patch": {
                "tags": [
                    "Renders"
                ],
                "summary": "Update Render",
                "description": "Update Render",
                "operationId": "patchRender",
                "parameters": [
                    {
                        "parameter": "id",
                        "name": "id",
                        "in": "path",
                        "description": "The ID to patch",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Render to store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "render": {
                                        "title": "render",
                                        "description": "render Text",
                                        "type": "string",
                                        "example": "Bohužel, stránka se nepodařila načíst."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Translation patched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Translation"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/translation/store": {
            "post": {
                "tags": [
                    "Translations"
                ],
                "summary": "Create new Translation",
                "description": "Create new Translation",
                "operationId": "createTranslation",
                "requestBody": {
                    "description": "Translation to store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "title": "id",
                                        "description": "id of Translation",
                                        "type": "integer",
                                        "readOnly": "true",
                                        "example": "1"
                                    },
                                    "name": {
                                        "title": "name",
                                        "description": "name of Translation",
                                        "type": "string",
                                        "example": "Error 404 page"
                                    },
                                    "abbreviation": {
                                        "title": "abbreviation",
                                        "description": "abbreviation of Translation",
                                        "type": "string",
                                        "example": "404"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Translation stored",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Translation"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/translation/get": {
            "get": {
                "tags": [
                    "Translations"
                ],
                "summary": "Get all Translations",
                "description": "Get all Translation",
                "operationId": "getTranslations",
                "requestBody": {},
                "responses": {
                    "200": {
                        "description": "Get Translations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Translation"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/translation/patch/{id}": {
            "patch": {
                "tags": [
                    "Translations"
                ],
                "summary": "Update Translation",
                "description": "Update Translation",
                "operationId": "patchTranslation",
                "parameters": [
                    {
                        "parameter": "id",
                        "name": "id",
                        "in": "path",
                        "description": "The ID to patch",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Translation to store",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "title": "name",
                                        "description": "name of Translation",
                                        "type": "string",
                                        "example": "Error 404 page"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Translation patched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Translation"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/": {
            "get": {
                "description": "Home page",
                "responses": {
                    "default": {
                        "description": "Welcome page"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Answer": {
                "title": "Answer",
                "description": "Answer model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Answer",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "value": {
                        "title": "value",
                        "description": "value of Answer",
                        "type": "string",
                        "example": "Pink"
                    },
                    "correct": {
                        "title": "correct",
                        "description": "correct Answer",
                        "type": "boolean",
                        "example": "1"
                    },
                    "question_id": {
                        "title": "question_id",
                        "description": "id of Question",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "Answers": {
                "title": "Answers",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Answer"
                        }
                    }
                },
                "type": "object"
            },
            "Exam": {
                "title": "Exam",
                "description": "Exam model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Exam",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Exam",
                        "type": "string",
                        "example": "AJ 1"
                    },
                    "pages": {
                        "$ref": "#/components/schemas/Pages"
                    }
                },
                "type": "object"
            },
            "Exams": {
                "title": "Exams",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Exam"
                        }
                    }
                },
                "type": "object"
            },
            "Page": {
                "title": "Page",
                "description": "Page model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Page",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Page",
                        "type": "string",
                        "example": "stránka 1"
                    },
                    "content": {
                        "title": "content",
                        "description": "content of Page",
                        "type": "string",
                        "example": "yesyeys"
                    },
                    "exam_id": {
                        "title": "exam_id",
                        "description": "id of Exam",
                        "type": "integer",
                        "example": "1"
                    },
                    "questions": {
                        "$ref": "#/components/schemas/Questions"
                    }
                },
                "type": "object"
            },
            "Pages": {
                "title": "Pages",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Page"
                        }
                    }
                },
                "type": "object"
            },
            "Question": {
                "title": "Page",
                "description": "Question model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Question",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Question",
                        "type": "string",
                        "example": "Růžová anglicky"
                    },
                    "page_id": {
                        "title": "page_id",
                        "description": "id of Page",
                        "type": "integer",
                        "example": "1"
                    },
                    "answers": {
                        "$ref": "#/components/schemas/Answers"
                    }
                },
                "type": "object"
            },
            "Questions": {
                "title": "Questions",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Question"
                        }
                    }
                },
                "type": "object"
            },
            "Language": {
                "title": "Language",
                "description": "Language model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Language",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Language",
                        "type": "string",
                        "example": "Czech"
                    },
                    "CZ": {
                        "title": "abbreviation",
                        "description": "abbreviation of Language",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Languages": {
                "title": "Languages",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Language"
                        }
                    }
                },
                "type": "object"
            },
            "Render": {
                "title": "Render",
                "description": "Render model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Render",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "render": {
                        "title": "render",
                        "description": "text to be Rendered",
                        "type": "string",
                        "example": "Bohužel, stránka se nepodařila načíst."
                    },
                    "language_id": {
                        "title": "language_id",
                        "description": "id of Language",
                        "type": "integer"
                    },
                    "translation_id": {
                        "title": "translation_id",
                        "description": "id of Translation",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Renders": {
                "title": "Renders",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Render"
                        }
                    }
                },
                "type": "object"
            },
            "Translation": {
                "title": "Translation",
                "description": "Translation model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Translation",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Translation",
                        "type": "string",
                        "example": "Error 404 page"
                    },
                    "render": {
                        "title": "render",
                        "description": "what will be Rendered",
                        "type": "string"
                    },
                    "language_id": {
                        "title": "language_id",
                        "description": "id of Language",
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "Translations": {
                "title": "Translations",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Translation"
                        }
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of User",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of User",
                        "type": "string",
                        "example": "Jozef Bugal"
                    },
                    "email": {
                        "title": "email",
                        "description": "email of User",
                        "type": "string"
                    },
                    "password": {
                        "title": "password",
                        "description": "password of User",
                        "type": "password",
                        "example": "pass12Erasd"
                    },
                    "password_confirmation": {
                        "title": "password_confirmation",
                        "description": "password confirmation of User",
                        "type": "password",
                        "example": "pass12Erasd"
                    }
                },
                "type": "object"
            },
            "Users": {
                "title": "Users",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object"
            }
        },
        "parameters": {
            "Answer--id": {
                "name": "Answer_id",
                "in": "path",
                "description": "Id of Answer",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Exam--id": {
                "name": "Exam_id",
                "in": "path",
                "description": "Id of Exam",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Page--id": {
                "name": "Page_id",
                "in": "path",
                "description": "Id of Page",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Question--id": {
                "name": "Question_id",
                "in": "path",
                "description": "Id of Question",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Language--id": {
                "name": "Language_id",
                "in": "path",
                "description": "Id of Language",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Render--id": {
                "name": "Render_id",
                "in": "path",
                "description": "Id of Render",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Translation--id": {
                "name": "Translation_id",
                "in": "path",
                "description": "Id of Translation",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "User--id": {
                "name": "User_id",
                "in": "path",
                "description": "Id of User",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            }
        }
    }
}